generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String               @id @default(auto()) @map("_id") @db.ObjectId
  email          String               @unique
  hashedPassword String
  role           String               @default("user")
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  assignedTests  UserTestAssignment[]
  results        Result[]
}

model Test {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  questions   Question[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
  assignedTo  UserTestAssignment[]
  results     Result[]
}

model UserTestAssignment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  test       Test     @relation(fields: [testId], references: [id])
  testId     String   @db.ObjectId
  assignedAt DateTime @default(now())

  @@unique([userId, testId])
}

model Question {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  text          String
  options       String[]
  correctAnswer String
  test          Test     @relation(fields: [testId], references: [id])
  testId        String   @db.ObjectId
}

model Result {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  test      Test     @relation(fields: [testId], references: [id])
  testId    String   @db.ObjectId
  score     Int
  answers   Json
  createdAt DateTime @default(now())
}
