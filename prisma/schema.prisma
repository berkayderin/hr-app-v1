// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                            String                         @id @default(auto()) @map("_id") @db.ObjectId
  email                         String                         @unique
  hashedPassword                String
  role                          String                         @default("user")
  createdAt                     DateTime                       @default(now())
  updatedAt                     DateTime                       @updatedAt
  assignedTests                 AssignedTest[]
  assignedSkillPersonalityTests AssignedSkillPersonalityTest[]
  ProductOwnerSimulation        ProductOwnerSimulation[]
}

model EnglishTest {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  level         String
  questions     Json
  createdAt     DateTime       @default(now())
  createdBy     String         @db.ObjectId
  assignedTests AssignedTest[]
}

model AssignedTest {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  userId        String      @db.ObjectId
  testId        String      @db.ObjectId
  assignedAt    DateTime    @default(now())
  completedAt   DateTime?
  score         Int?
  startedAt     DateTime?
  timeRemaining Int?
  answers       Json?
  user          User        @relation(fields: [userId], references: [id])
  test          EnglishTest @relation(fields: [testId], references: [id])
}

model SkillPersonalityTest {
  id            String                         @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  sections      Json
  createdAt     DateTime                       @default(now())
  createdBy     String                         @db.ObjectId
  assignedTests AssignedSkillPersonalityTest[]
}

model AssignedSkillPersonalityTest {
  id            String               @id @default(auto()) @map("_id") @db.ObjectId
  userId        String               @db.ObjectId
  testId        String               @db.ObjectId
  assignedAt    DateTime             @default(now())
  completedAt   DateTime?
  startedAt     DateTime?
  timeRemaining Int?
  answers       Json?
  results       Json?
  user          User                 @relation(fields: [userId], references: [id])
  test          SkillPersonalityTest @relation(fields: [testId], references: [id])
}

model ProductOwnerSimulation {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                String    @db.ObjectId
  startedAt             DateTime  @default(now())
  completedAt           DateTime?
  currentTask           String?
  teamMeeting           Json?
  backlogPrioritization Json?
  userStoryWriting      Json?
  score                 Int?
  user                  User      @relation(fields: [userId], references: [id])
}
